{"ast":null,"code":"var parse = require('ret');\nvar types = parse.types;\nmodule.exports = function (re, opts) {\n  if (!opts) opts = {};\n  var replimit = opts.limit === undefined ? 25 : opts.limit;\n  if (isRegExp(re)) re = re.source;else if (typeof re !== 'string') re = String(re);\n  try {\n    re = parse(re);\n  } catch (err) {\n    return false;\n  }\n  var reps = 0;\n  return function walk(node, starHeight) {\n    if (node.type === types.REPETITION) {\n      starHeight++;\n      reps++;\n      if (starHeight > 1) return false;\n      if (reps > replimit) return false;\n    }\n    if (node.options) {\n      for (var i = 0, len = node.options.length; i < len; i++) {\n        var ok = walk({\n          stack: node.options[i]\n        }, starHeight);\n        if (!ok) return false;\n      }\n    }\n    var stack = node.stack || node.value && node.value.stack;\n    if (!stack) return true;\n    for (var i = 0; i < stack.length; i++) {\n      var ok = walk(stack[i], starHeight);\n      if (!ok) return false;\n    }\n    return true;\n  }(re, 0);\n};\nfunction isRegExp(x) {\n  return {}.toString.call(x) === '[object RegExp]';\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}