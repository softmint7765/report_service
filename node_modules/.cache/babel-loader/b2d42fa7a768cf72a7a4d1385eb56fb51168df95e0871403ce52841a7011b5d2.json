{"ast":null,"code":"import _slicedToArray from \"D:/Repo/softmint-react-pro/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"D:\\\\Repo\\\\softmint-react-pro\\\\src\\\\views\\\\examples\\\\New.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _React$useState = React.useState([null, null]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dateRange = _React$useState2[0],\n    setDateRange = _React$useState2[1];\n  var _dateRange = _slicedToArray(dateRange, 2),\n    startDate = _dateRange[0],\n    endDate = _dateRange[1];\n  var startD = dateRange[0];\n  var endD = dateRange[1];\n  var st = startD && startD.getDate();\n  var ed = endD && endD.getDate();\n  var rangeDates = moment(startD);\n  var dates = [];\n  var daterray = [];\n  for (var i = st; i <= ed; i += 1) {\n    if (i == st) {\n      dates = rangeDates;\n    } else {\n      dates = rangeDates.add(1, \"day\");\n    }\n    daterray.push(dates.format(\"DD/MM\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selectsRange: true,\n      startDate: startDate,\n      endDate: endDate,\n      onChange: function onChange(update) {\n        setDateRange(update);\n      },\n      isClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Selected Dates \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: daterray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sWUxZwAV96RfqLq5ZXTGhZUS1D0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["moment","React","DatePicker","App","useState","dateRange","setDateRange","startDate","endDate","startD","endD","st","getDate","ed","rangeDates","dates","daterray","i","add","push","format","update"],"sources":["D:/Repo/softmint-react-pro/src/views/examples/New.js"],"sourcesContent":["import \"./styles.css\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function App() {\r\n  const [dateRange, setDateRange] = React.useState([null, null]);\r\n  const [startDate, endDate] = dateRange;\r\n  const startD = dateRange[0];\r\n  const endD = dateRange[1];\r\n  const st = startD && startD.getDate();\r\n  const ed = endD && endD.getDate();\r\n  const rangeDates = moment(startD);\r\n  let dates = [];\r\n  const daterray = [];\r\n  for (let i = st; i <= ed; i += 1) {\r\n    if (i == st) {\r\n      dates = rangeDates;\r\n    } else {\r\n      dates = rangeDates.add(1, \"day\");\r\n    }\r\n\r\n    daterray.push(dates.format(\"DD/MM\"));\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <DatePicker\r\n        selectsRange\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        onChange={(update) => {\r\n          setDateRange(update);\r\n        }}\r\n        isClearable\r\n      />\r\n      <div>\r\n        <h5>Selected Dates </h5>\r\n        <p>{daterray}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAO,cAAc;AACrB,OAAOA,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AAAC;AAEpD,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,sBAAkCF,KAAK,CAACG,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAAA;IAAvDC,SAAS;IAAEC,YAAY;EAC9B,gCAA6BD,SAAS;IAA/BE,SAAS;IAAEC,OAAO;EACzB,IAAMC,MAAM,GAAGJ,SAAS,CAAC,CAAC,CAAC;EAC3B,IAAMK,IAAI,GAAGL,SAAS,CAAC,CAAC,CAAC;EACzB,IAAMM,EAAE,GAAGF,MAAM,IAAIA,MAAM,CAACG,OAAO,EAAE;EACrC,IAAMC,EAAE,GAAGH,IAAI,IAAIA,IAAI,CAACE,OAAO,EAAE;EACjC,IAAME,UAAU,GAAGd,MAAM,CAACS,MAAM,CAAC;EACjC,IAAIM,KAAK,GAAG,EAAE;EACd,IAAMC,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIC,CAAC,GAAGN,EAAE,EAAEM,CAAC,IAAIJ,EAAE,EAAEI,CAAC,IAAI,CAAC,EAAE;IAChC,IAAIA,CAAC,IAAIN,EAAE,EAAE;MACXI,KAAK,GAAGD,UAAU;IACpB,CAAC,MAAM;MACLC,KAAK,GAAGD,UAAU,CAACI,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;IAClC;IAEAF,QAAQ,CAACG,IAAI,CAACJ,KAAK,CAACK,MAAM,CAAC,OAAO,CAAC,CAAC;EACtC;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,UAAU;MACT,YAAY;MACZ,SAAS,EAAEb,SAAU;MACrB,OAAO,EAAEC,OAAQ;MACjB,QAAQ,EAAE,kBAACa,MAAM,EAAK;QACpBf,YAAY,CAACe,MAAM,CAAC;MACtB,CAAE;MACF,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QACX,eACF;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB;QAAA,UAAIL;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GApCuBb,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}