{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _warning = require('warning');\nvar _warning2 = _interopRequireDefault(_warning);\nvar _invariant = require('invariant');\nvar _invariant2 = _interopRequireDefault(_invariant);\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\nvar _DOMUtils = require('./DOMUtils');\nvar _HashProtocol = require('./HashProtocol');\nvar HashProtocol = _interopRequireWildcard(_HashProtocol);\nvar _createHistory = require('./createHistory');\nvar _createHistory2 = _interopRequireDefault(_createHistory);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar DefaultQueryKey = '_k';\nvar addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!' + path;\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substring(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '/' ? path.substring(1) : path;\n    },\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\nvar createHashHistory = function createHashHistory() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Hash history needs a DOM') : (0, _invariant2.default)(false) : void 0;\n  var queryKey = options.queryKey,\n    hashType = options.hashType;\n  process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(queryKey !== false, 'Using { queryKey: false } no longer works. Instead, just don\\'t ' + 'use location state if you don\\'t want a key in your URL query string') : void 0;\n  if (typeof queryKey !== 'string') queryKey = DefaultQueryKey;\n  if (hashType == null) hashType = 'slash';\n  if (!(hashType in HashPathCoders)) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Invalid hash type: %s', hashType) : void 0;\n    hashType = 'slash';\n  }\n  var pathCoder = HashPathCoders[hashType];\n  var getUserConfirmation = HashProtocol.getUserConfirmation;\n  var getCurrentLocation = function getCurrentLocation() {\n    return HashProtocol.getCurrentLocation(pathCoder, queryKey);\n  };\n  var pushLocation = function pushLocation(location) {\n    return HashProtocol.pushLocation(location, pathCoder, queryKey);\n  };\n  var replaceLocation = function replaceLocation(location) {\n    return HashProtocol.replaceLocation(location, pathCoder, queryKey);\n  };\n  var history = (0, _createHistory2.default)(_extends({\n    getUserConfirmation: getUserConfirmation\n  }, options, {\n    getCurrentLocation: getCurrentLocation,\n    pushLocation: pushLocation,\n    replaceLocation: replaceLocation,\n    go: HashProtocol.go\n  }));\n  var listenerCount = 0,\n    stopListener = void 0;\n  var startListener = function startListener(listener, before) {\n    if (++listenerCount === 1) stopListener = HashProtocol.startListener(history.transitionTo, pathCoder, queryKey);\n    var unlisten = before ? history.listenBefore(listener) : history.listen(listener);\n    return function () {\n      unlisten();\n      if (--listenerCount === 0) stopListener();\n    };\n  };\n  var listenBefore = function listenBefore(listener) {\n    return startListener(listener, true);\n  };\n  var listen = function listen(listener) {\n    return startListener(listener, false);\n  };\n  var goIsSupportedWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n  var go = function go(n) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    history.go(n);\n  };\n  var createHref = function createHref(path) {\n    return '#' + pathCoder.encodePath(history.createHref(path));\n  };\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    go: go,\n    createHref: createHref\n  });\n};\nexports.default = createHashHistory;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}