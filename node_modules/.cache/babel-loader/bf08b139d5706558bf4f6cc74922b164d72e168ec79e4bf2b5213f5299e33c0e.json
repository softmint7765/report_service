{"ast":null,"code":"'use strict';\n\nvar isObject = require('is-extendable');\nvar union = require('arr-union');\nvar get = require('get-value');\nvar set = require('set-value');\nmodule.exports = function unionValue(obj, prop, value) {\n  if (!isObject(obj)) {\n    throw new TypeError('union-value expects the first argument to be an object.');\n  }\n  if (typeof prop !== 'string') {\n    throw new TypeError('union-value expects `prop` to be a string.');\n  }\n  var arr = arrayify(get(obj, prop));\n  set(obj, prop, union(arr, arrayify(value)));\n  return obj;\n};\nfunction arrayify(val) {\n  if (val === null || typeof val === 'undefined') {\n    return [];\n  }\n  if (Array.isArray(val)) {\n    return val;\n  }\n  return [val];\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}