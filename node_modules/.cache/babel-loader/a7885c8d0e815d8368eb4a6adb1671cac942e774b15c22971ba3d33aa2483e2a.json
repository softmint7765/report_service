{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name min\r\n * @category Common Helpers\r\n * @summary Returns the earliest of the given dates.\r\n *\r\n * @description\r\n * Returns the earliest of the given dates.\r\n *\r\n * @param {Date[]|Number[]} datesArray - the dates to compare\r\n * @returns {Date} - the earliest of the dates\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Which of these dates is the earliest?\r\n * const result = min([\r\n *   new Date(1989, 6, 10),\r\n *   new Date(1987, 1, 11),\r\n *   new Date(1995, 6, 2),\r\n *   new Date(1990, 0, 1)\r\n * ])\r\n * //=> Wed Feb 11 1987 00:00:00\r\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (_typeof(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n    if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}