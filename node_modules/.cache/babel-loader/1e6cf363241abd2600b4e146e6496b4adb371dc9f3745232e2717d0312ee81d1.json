{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar views = {\n  hours: 'le ore',\n  minutes: 'i minuti',\n  seconds: 'i secondi'\n};\nvar itITPickers = {\n  // Calendar navigation\n  previousMonth: 'Mese precedente',\n  nextMonth: 'Mese successivo',\n  // View navigation\n  openPreviousView: 'apri la vista precedente',\n  openNextView: 'apri la vista successiva',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? \"la vista dell'anno è aperta, passare alla vista del calendario\" : \"la vista dell'calendario è aperta, passare alla vista dell'anno\";\n  },\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Inizio',\n  end: 'Fine',\n  // Action bar\n  cancelButtonLabel: 'Cancellare',\n  clearButtonLabel: 'Sgomberare',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Oggi',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Seleziona \".concat(views[view], \". \").concat(time === null ? 'Nessun orario selezionato' : \"L'ora selezionata \\xE8 \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" ore\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minuti\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" secondi\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Scegli la data, la data selezionata \\xE8 \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Scegli la data';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Scegli l'ora, l'ora selezionata \\xE8 \".concat(utils.format(utils.date(rawValue), 'fullTime')) : \"Scegli l'ora\";\n  },\n  // Table labels\n  timeTableLabel: 'scegli un ora',\n  dateTableLabel: 'scegli una data'\n};\nexport var itIT = getPickersLocalization(itITPickers);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}