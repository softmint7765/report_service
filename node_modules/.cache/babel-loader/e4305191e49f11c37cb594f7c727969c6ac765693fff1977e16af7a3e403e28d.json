{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n    row = ownerState.row;\n  var slots = {\n    root: ['root', row && 'row']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nvar FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _extends({\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  }, ownerState.row && {\n    flexDirection: 'row'\n  });\n});\n/**\r\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\r\n * It provides compact row layout.\r\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\r\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  var className = props.className,\n    _props$row = props.row,\n    row = _props$row === void 0 ? false : _props$row,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var ownerState = _extends({}, props, {\n    row: row\n  });\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * Display group of elements in a compact row.\r\n   * @default false\r\n   */\n  row: PropTypes.bool,\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormGroup;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}