{"ast":null,"code":"\"use strict\";\n\nvar isValue = require(\"type/value/is\"),\n  ensureValue = require(\"type/value/ensure\"),\n  ensurePlainFunction = require(\"type/plain-function/ensure\"),\n  copy = require(\"es5-ext/object/copy\"),\n  normalizeOptions = require(\"es5-ext/object/normalize-options\"),\n  map = require(\"es5-ext/object/map\");\nvar bind = Function.prototype.bind,\n  defineProperty = Object.defineProperty,\n  hasOwnProperty = Object.prototype.hasOwnProperty,\n  define;\ndefine = function define(name, desc, options) {\n  var value = ensureValue(desc) && ensurePlainFunction(desc.value),\n    dgs;\n  dgs = copy(desc);\n  delete dgs.writable;\n  delete dgs.value;\n  dgs.get = function () {\n    if (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n    desc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n    defineProperty(this, name, desc);\n    return this[name];\n  };\n  return dgs;\n};\nmodule.exports = function (props /*, options*/) {\n  var options = normalizeOptions(arguments[1]);\n  if (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n  return map(props, function (desc, name) {\n    return define(name, desc, options);\n  });\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}