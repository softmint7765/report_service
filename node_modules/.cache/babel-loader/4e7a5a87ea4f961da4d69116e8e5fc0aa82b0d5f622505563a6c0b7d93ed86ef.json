{"ast":null,"code":"import { millisecondsInMinute } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\r\n * @name differenceInMinutes\r\n * @category Minute Helpers\r\n * @summary Get the number of minutes between the given dates.\r\n *\r\n * @description\r\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @param {Object} [options] - an object with options.\r\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\r\n * @returns {Number} the number of minutes\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\r\n * const result = differenceInMinutes(\r\n *   new Date(2014, 6, 2, 12, 20, 0),\r\n *   new Date(2014, 6, 2, 12, 7, 59)\r\n * )\r\n * //=> 12\r\n *\r\n * @example\r\n * // How many minutes are between 10:01:59 and 10:00:00\r\n * const result = differenceInMinutes(\r\n *   new Date(2000, 0, 1, 10, 0, 0),\r\n *   new Date(2000, 0, 1, 10, 1, 59)\r\n * )\r\n * //=> -1\r\n */\n\nexport default function differenceInMinutes(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}