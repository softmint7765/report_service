{"ast":null,"code":"import _slicedToArray from \"C:/Users/91798/Documents/IPMsg/AutoSave/React admin/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { arrayIncludes } from '../utils/utils';\nfunction getOrientation() {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  } // Support IOS safari\n\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n  return 'portrait';\n}\nexport var useIsLandscape = function useIsLandscape(views, customOrientation) {\n  var _React$useState = React.useState(getOrientation),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    orientation = _React$useState2[0],\n    setOrientation = _React$useState2[1];\n  useEnhancedEffect(function () {\n    var eventHandler = function eventHandler() {\n      setOrientation(getOrientation());\n    };\n    window.addEventListener('orientationchange', eventHandler);\n    return function () {\n      window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, []);\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n  var orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}