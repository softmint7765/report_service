{"ast":null,"code":"'use strict';\n\nvar File = require('vinyl');\nvar helpers = require('./lib/helpers');\nvar PLUGIN_NAME = 'vinyl-sourcemap';\nfunction add(file, callback) {\n  // Bail early an error if the file argument is not a Vinyl file\n  if (!File.isVinyl(file)) {\n    return callback(new Error(PLUGIN_NAME + '-add: Not a vinyl file'));\n  }\n\n  // Bail early with an error if file has streaming contents\n  if (file.isStream()) {\n    return callback(new Error(PLUGIN_NAME + '-add: Streaming not supported'));\n  }\n\n  // Bail early successfully if file is null or already has a sourcemap\n  if (file.isNull() || file.sourceMap) {\n    return callback(null, file);\n  }\n  var state = {\n    path: '',\n    // Root path for the sources in the map\n    map: null,\n    content: file.contents.toString(),\n    // TODO: handle this?\n    preExistingComment: null\n  };\n  helpers.addSourceMaps(file, state, callback);\n}\nfunction write(file, destPath, callback) {\n  // Check if options or a callback are passed as second argument\n  if (typeof destPath === 'function') {\n    callback = destPath;\n    destPath = undefined;\n  }\n\n  // Bail early with an error if the file argument is not a Vinyl file\n  if (!File.isVinyl(file)) {\n    return callback(new Error(PLUGIN_NAME + '-write: Not a vinyl file'));\n  }\n\n  // Bail early with an error if file has streaming contents\n  if (file.isStream()) {\n    return callback(new Error(PLUGIN_NAME + '-write: Streaming not supported'));\n  }\n\n  // Bail early successfully if file is null or doesn't have sourcemap\n  if (file.isNull() || !file.sourceMap) {\n    return callback(null, file);\n  }\n  helpers.writeSourceMaps(file, destPath, callback);\n}\nmodule.exports = {\n  add: add,\n  write: write\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}