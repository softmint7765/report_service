{"ast":null,"code":"'use strict';\n\nvar once = require('once');\nvar helpers = require('./helpers');\nfunction mapSeries(values, iterator, extensions, done) {\n  // Allow for extensions to not be specified\n  if (typeof extensions === 'function') {\n    done = extensions;\n    extensions = {};\n  }\n\n  // Handle no callback case\n  if (typeof done !== 'function') {\n    done = helpers.noop;\n  }\n  done = once(done);\n\n  // Will throw if non-object\n  var keys = Object.keys(values);\n  var length = keys.length;\n  var idx = 0;\n  // Return the same type as passed in\n  var results = helpers.initializeResults(values);\n  var exts = helpers.defaultExtensions(extensions);\n  if (length === 0) {\n    return done(null, results);\n  }\n  var key = keys[idx];\n  next(key);\n  function next(key) {\n    var value = values[key];\n    var storage = exts.create(value, key) || {};\n    exts.before(storage);\n    iterator(value, key, once(handler));\n    function handler(err, result) {\n      if (err) {\n        exts.error(err, storage);\n        return done(err, results);\n      }\n      exts.after(result, storage);\n      results[key] = result;\n      if (++idx >= length) {\n        done(err, results);\n      } else {\n        next(keys[idx]);\n      }\n    }\n  }\n}\nmodule.exports = mapSeries;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}