{"ast":null,"code":"'use strict';\n\nvar assert = require('assert');\nfunction isFunction(fn) {\n  return typeof fn === 'function';\n}\nfunction isConstructor(registry) {\n  if (!(registry && registry.prototype)) {\n    return false;\n  }\n  var hasProtoGet = isFunction(registry.prototype.get);\n  var hasProtoSet = isFunction(registry.prototype.set);\n  var hasProtoInit = isFunction(registry.prototype.init);\n  var hasProtoTasks = isFunction(registry.prototype.tasks);\n  if (hasProtoGet || hasProtoSet || hasProtoInit || hasProtoTasks) {\n    return true;\n  }\n  return false;\n}\nfunction validateRegistry(registry) {\n  try {\n    assert(isFunction(registry.get), 'Custom registry must have `get` function');\n    assert(isFunction(registry.set), 'Custom registry must have `set` function');\n    assert(isFunction(registry.init), 'Custom registry must have `init` function');\n    assert(isFunction(registry.tasks), 'Custom registry must have `tasks` function');\n  } catch (err) {\n    if (isConstructor(registry)) {\n      assert(false, 'Custom registries must be instantiated, but it looks like you passed a constructor');\n    } else {\n      throw err;\n    }\n  }\n}\nmodule.exports = validateRegistry;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}