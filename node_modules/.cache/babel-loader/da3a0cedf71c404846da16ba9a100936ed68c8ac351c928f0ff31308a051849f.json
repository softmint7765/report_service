{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n};\nvar esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año';\n  },\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpia',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Seleccione \".concat(views[view], \". \").concat(time === null ? 'Sin tiempo seleccionado' : \"El tiempo seleccionado es \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" horas\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minutos\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" segundos\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la fecha, la fecha elegida es \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Elige la fecha';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la hora, la hora elegido es \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Elige la hora';\n  },\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport var esES = getPickersLocalization(esESPickers);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}