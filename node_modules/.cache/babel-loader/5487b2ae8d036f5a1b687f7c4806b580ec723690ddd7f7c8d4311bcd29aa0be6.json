{"ast":null,"code":"/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function (obj, prop, a, b, c) {\n  if (!isObject(obj) || !prop) {\n    return obj;\n  }\n  prop = toString(prop);\n\n  // allowing for multiple properties to be passed as\n  // a string or array, but much faster (3-4x) than doing\n  // `[].slice.call(arguments)`\n  if (a) prop += '.' + toString(a);\n  if (b) prop += '.' + toString(b);\n  if (c) prop += '.' + toString(c);\n  if (prop in obj) {\n    return obj[prop];\n  }\n  var segs = prop.split('.');\n  var len = segs.length;\n  var i = -1;\n  while (obj && ++i < len) {\n    var key = segs[i];\n    while (key[key.length - 1] === '\\\\') {\n      key = key.slice(0, -1) + '.' + segs[++i];\n    }\n    obj = obj[key];\n  }\n  return obj;\n};\nfunction isObject(val) {\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\n}\nfunction toString(val) {\n  if (!val) return '';\n  if (Array.isArray(val)) {\n    return val.join('.');\n  }\n  return val;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}