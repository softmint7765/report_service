{"ast":null,"code":"import _defineProperty from \"C:/Users/91798/Documents/IPMsg/AutoSave/React admin/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _styled;\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport DialogContent from '@mui/material/DialogContent';\nimport Dialog, { dialogClasses } from '@mui/material/Dialog';\nimport { styled } from '@mui/material/styles';\nimport { DIALOG_WIDTH } from '../constants/dimensions';\nimport { PickersActionBar } from '../../PickersActionBar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PickersModalDialogRoot = styled(Dialog)((_styled = {}, _defineProperty(_styled, \"& .\".concat(dialogClasses.container), {\n  outline: 0\n}), _defineProperty(_styled, \"& .\".concat(dialogClasses.paper), {\n  outline: 0,\n  minWidth: DIALOG_WIDTH\n}), _styled));\nvar PickersModalDialogContent = styled(DialogContent)({\n  '&:first-of-type': {\n    padding: 0\n  }\n});\nexport var PickersModalDialog = function PickersModalDialog(props) {\n  var _components$ActionBar;\n  var children = props.children,\n    _props$DialogProps = props.DialogProps,\n    DialogProps = _props$DialogProps === void 0 ? {} : _props$DialogProps,\n    onAccept = props.onAccept,\n    onClear = props.onClear,\n    onDismiss = props.onDismiss,\n    onCancel = props.onCancel,\n    onSetToday = props.onSetToday,\n    open = props.open,\n    components = props.components,\n    componentsProps = props.componentsProps;\n  var ActionBar = (_components$ActionBar = components == null ? void 0 : components.ActionBar) != null ? _components$ActionBar : PickersActionBar;\n  return /*#__PURE__*/_jsxs(PickersModalDialogRoot, _extends({\n    open: open,\n    onClose: onDismiss\n  }, DialogProps, {\n    children: [/*#__PURE__*/_jsx(PickersModalDialogContent, {\n      children: children\n    }), /*#__PURE__*/_jsx(ActionBar, _extends({\n      onAccept: onAccept,\n      onClear: onClear,\n      onCancel: onCancel,\n      onSetToday: onSetToday,\n      actions: ['cancel', 'accept']\n    }, componentsProps == null ? void 0 : componentsProps.actionBar))]\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}