{"ast":null,"code":"import * as React from 'react';\nimport { useValidation } from './useValidation';\nimport { useLocalizationContext } from '../useUtils';\nimport { parseNonNullablePickerDate } from '../../utils/date-utils';\nexport var validateDate = function validateDate(_ref) {\n  var props = _ref.props,\n    value = _ref.value,\n    adapter = _ref.adapter;\n  var now = adapter.utils.date();\n  var date = adapter.utils.date(value);\n  var minDate = parseNonNullablePickerDate(adapter.utils, props.minDate, adapter.defaultDates.minDate);\n  var maxDate = parseNonNullablePickerDate(adapter.utils, props.maxDate, adapter.defaultDates.maxDate);\n  if (date === null) {\n    return null;\n  }\n  switch (true) {\n    case !adapter.utils.isValid(value):\n      return 'invalidDate';\n    case Boolean(props.shouldDisableDate && props.shouldDisableDate(date)):\n      return 'shouldDisableDate';\n    case Boolean(props.disableFuture && adapter.utils.isAfterDay(date, now)):\n      return 'disableFuture';\n    case Boolean(props.disablePast && adapter.utils.isBeforeDay(date, now)):\n      return 'disablePast';\n    case Boolean(minDate && adapter.utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n    case Boolean(maxDate && adapter.utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n    default:\n      return null;\n  }\n};\nexport var useIsDayDisabled = function useIsDayDisabled(_ref2) {\n  var shouldDisableDate = _ref2.shouldDisableDate,\n    minDate = _ref2.minDate,\n    maxDate = _ref2.maxDate,\n    disableFuture = _ref2.disableFuture,\n    disablePast = _ref2.disablePast;\n  var adapter = useLocalizationContext();\n  return React.useCallback(function (day) {\n    return validateDate({\n      adapter: adapter,\n      value: day,\n      props: {\n        shouldDisableDate: shouldDisableDate,\n        minDate: minDate,\n        maxDate: maxDate,\n        disableFuture: disableFuture,\n        disablePast: disablePast\n      }\n    }) !== null;\n  }, [adapter, shouldDisableDate, minDate, maxDate, disableFuture, disablePast]);\n};\nexport var isSameDateError = function isSameDateError(a, b) {\n  return a === b;\n};\nexport var useDateValidation = function useDateValidation(props) {\n  return useValidation(props, validateDate, isSameDateError);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}