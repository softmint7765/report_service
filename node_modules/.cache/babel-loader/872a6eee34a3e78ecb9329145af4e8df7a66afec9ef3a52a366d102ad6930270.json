{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"hasSelected\", \"isInner\", \"type\", \"value\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { CLOCK_WIDTH, CLOCK_HOUR_WIDTH } from './shared';\nimport { getClockPointerUtilityClass } from './clockPointerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    thumb: ['thumb']\n  };\n  return composeClasses(slots, getClockPointerUtilityClass, classes);\n};\nvar ClockPointerRoot = styled('div', {\n  name: 'MuiClockPointer',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(_, styles) {\n    return styles.root;\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n    ownerState = _ref.ownerState;\n  return _extends({\n    width: 2,\n    backgroundColor: theme.palette.primary.main,\n    position: 'absolute',\n    left: 'calc(50% - 1px)',\n    bottom: '50%',\n    transformOrigin: 'center bottom 0px'\n  }, ownerState.shouldAnimate && {\n    transition: theme.transitions.create(['transform', 'height'])\n  });\n});\nvar ClockPointerThumb = styled('div', {\n  name: 'MuiClockPointer',\n  slot: 'Thumb',\n  overridesResolver: function overridesResolver(_, styles) {\n    return styles.thumb;\n  }\n})(function (_ref2) {\n  var theme = _ref2.theme,\n    ownerState = _ref2.ownerState;\n  return _extends({\n    width: 4,\n    height: 4,\n    backgroundColor: theme.palette.primary.contrastText,\n    borderRadius: '50%',\n    position: 'absolute',\n    top: -21,\n    left: \"calc(50% - \".concat(CLOCK_HOUR_WIDTH / 2, \"px)\"),\n    border: \"\".concat((CLOCK_HOUR_WIDTH - 4) / 2, \"px solid \").concat(theme.palette.primary.main),\n    boxSizing: 'content-box'\n  }, ownerState.hasSelected && {\n    backgroundColor: theme.palette.primary.main\n  });\n});\n/**\n * @ignore - internal component.\n */\n\nexport function ClockPointer(inProps) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiClockPointer'\n  });\n  var className = props.className,\n    isInner = props.isInner,\n    type = props.type,\n    value = props.value,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var previousType = React.useRef(type);\n  React.useEffect(function () {\n    previousType.current = type;\n  }, [type]);\n  var ownerState = _extends({}, props, {\n    shouldAnimate: previousType.current !== type\n  });\n  var classes = useUtilityClasses(ownerState);\n  var getAngleStyle = function getAngleStyle() {\n    var max = type === 'hours' ? 12 : 60;\n    var angle = 360 / max * value;\n    if (type === 'hours' && value > 12) {\n      angle -= 360; // round up angle to max 360 degrees\n    }\n\n    return {\n      height: Math.round((isInner ? 0.26 : 0.4) * CLOCK_WIDTH),\n      transform: \"rotateZ(\".concat(angle, \"deg)\")\n    };\n  };\n  return /*#__PURE__*/_jsx(ClockPointerRoot, _extends({\n    style: getAngleStyle(),\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClockPointerThumb, {\n      ownerState: ownerState,\n      className: classes.thumb\n    })\n  }));\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}