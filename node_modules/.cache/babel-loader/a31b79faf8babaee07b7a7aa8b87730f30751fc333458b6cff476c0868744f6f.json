{"ast":null,"code":"'use strict';\n\nvar through = require('through2');\nvar writeDir = require('./write-dir');\nvar writeStream = require('./write-stream');\nvar writeBuffer = require('./write-buffer');\nvar writeSymbolicLink = require('./write-symbolic-link');\nvar fo = require('../../file-operations');\nfunction writeContents(optResolver) {\n  function writeFile(file, enc, callback) {\n    // Write it as a symlink\n    if (file.isSymbolic()) {\n      return writeSymbolicLink(file, optResolver, onWritten);\n    }\n\n    // If directory then mkdirp it\n    if (file.isDirectory()) {\n      return writeDir(file, optResolver, onWritten);\n    }\n\n    // Stream it to disk yo\n    if (file.isStream()) {\n      return writeStream(file, optResolver, onWritten);\n    }\n\n    // Write it like normal\n    if (file.isBuffer()) {\n      return writeBuffer(file, optResolver, onWritten);\n    }\n\n    // If no contents then do nothing\n    if (file.isNull()) {\n      return onWritten();\n    }\n\n    // This is invoked by the various writeXxx modules when they've finished\n    // writing the contents.\n    function onWritten(writeErr) {\n      var flags = fo.getFlags({\n        overwrite: optResolver.resolve('overwrite', file),\n        append: optResolver.resolve('append', file)\n      });\n      if (fo.isFatalOverwriteError(writeErr, flags)) {\n        return callback(writeErr);\n      }\n      callback(null, file);\n    }\n  }\n  return through.obj(writeFile);\n}\nmodule.exports = writeContents;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}